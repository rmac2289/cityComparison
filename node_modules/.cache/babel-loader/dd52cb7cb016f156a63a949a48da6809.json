{"ast":null,"code":"var _jsxFileName = \"/Users/rossmacdonald/Projects/comparecities/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport Nav from './Nav';\nimport SearchBar from './SearchBar';\nimport Scores from './Scores';\nimport CityName from './CityName';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetList = () => {\n      this.setState({\n        city: \"\",\n        nameScore: [],\n        cityScore: \"\",\n        cityName: \"\"\n      });\n    };\n\n    this.cityChanged = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.wrong = \"Something went wrong, please try again later\";\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.resetList();\n      const options = {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      let uaAPI;\n      let scoresAPI;\n      let scores;\n      let details;\n\n      const handleResponse = response => {\n        if (!response.ok) {\n          throw new Error(this.wrong);\n        }\n\n        return response.json();\n      };\n\n      fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`, options).then(response => {\n        if (!response.ok) {\n          throw new Error(this.wrong);\n        }\n\n        return response.json();\n      }).then(data => {\n        this.setState({\n          NoResult: data.count\n        });\n        console.log(data);\n        let searchResults = \"city:search-results\";\n        uaAPI = data._embedded[searchResults][0]._links[\"city:item\"].href;\n        return fetch(uaAPI, options);\n      }).then(response => {\n        handleResponse(response);\n      }).then(newData => {\n        scoresAPI = newData._links[\"city:urban_area\"].href;\n        return fetch(scoresAPI, options).then(response => {\n          handleResponse(response);\n        }).then(newerData => {\n          this.setState({\n            cityName: [...this.state.cityName, newerData.full_name]\n          });\n          console.log(newerData);\n          details = newerData._links[\"ua:details].href\"];\n          scores = newerData._links[\"ua:scores\"].href;\n          return fetch(scores, options).then(response => {\n            handleResponse(response);\n          }).then(scoreData => {\n            console.log(scoreData);\n            let scores = scoreData.categories;\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n            });\n            return fetch(details, options).then(response => {\n              handleResponse(response);\n            }).then();\n          });\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      city: \"\",\n      nameScore: [],\n      cityScore: \"\",\n      cityName: \"\"\n    };\n  }\n\n  render() {\n    const scoreItems = this.state.nameScore;\n    let star = 'â€¢';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      cityChanged: this.cityChanged,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CityName, {\n      cityName: this.state.cityName,\n      score: this.state.cityScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), this.state.cityName !== '' && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"mainList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, this.state.NoResult === 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 36\n      }\n    }, \"Sorry, no records for that city.\") : scoreItems.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Scores, {\n        key: index,\n        name: value.name,\n        score: value.score_out_of_10,\n        bar: star.repeat(Math.floor(value.score_out_of_10)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 16\n        }\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/comparecities/src/App.js"],"names":["React","Component","Header","Nav","SearchBar","Scores","CityName","App","constructor","props","resetList","setState","city","nameScore","cityScore","cityName","cityChanged","event","target","value","wrong","handleSubmit","preventDefault","options","method","headers","uaAPI","scoresAPI","scores","details","handleResponse","response","ok","Error","json","fetch","state","then","data","NoResult","count","console","log","searchResults","_embedded","_links","href","newData","newerData","full_name","scoreData","categories","teleport_city_score","catch","err","error","message","render","scoreItems","star","map","index","name","score_out_of_10","repeat","Math","floor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport Nav from './Nav'\nimport SearchBar from './SearchBar'\nimport Scores from './Scores'\nimport CityName from './CityName'\n\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n  this.state = {\n    city: \"\",\n    nameScore: [],\n    cityScore: \"\",\n    cityName: \"\"\n  }\n}\n  resetList = () => {\n    this.setState({\n      city: \"\",\n      nameScore: [],\n      cityScore: \"\",\n      cityName: \"\"\n    })\n  }\n  \n  cityChanged = (event) => {\n    this.setState({\n      city: event.target.value\n    });\n  }\n  wrong = \"Something went wrong, please try again later\"\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.resetList();\n  const options =  {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  }\n  let uaAPI;\n  let scoresAPI;\n  let scores;\n  let details;\n\n  const handleResponse = (response) => {\n    if (!response.ok){\n      throw new Error(this.wrong)\n    }\n    return response.json()\n  }\n\n  fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`,options)\n  .then(response => {\n    if(!response.ok) {\n      throw new Error(this.wrong);\n    }\n    return response.json();\n  })\n  .then(data => {\n    this.setState({NoResult: data.count})\n    console.log(data)\n    let searchResults = \"city:search-results\"\n    uaAPI = data._embedded[searchResults][0]._links[\"city:item\"].href;\n    return fetch(uaAPI,options)\n  })\n    .then(response => {\n      handleResponse(response);\n    })\n    .then(newData => {\n      scoresAPI = newData._links[\"city:urban_area\"].href\n      return fetch(scoresAPI,options)\n      .then(response => {\n        handleResponse(response);\n      })\n      .then(newerData => {\n        this.setState({cityName: [...this.state.cityName, newerData.full_name]})\n        console.log(newerData)\n        details = newerData._links[\"ua:details].href\"]\n        scores = newerData._links[\"ua:scores\"].href\n        return fetch(scores, options)\n        .then(response => {\n          handleResponse(response);\n        })\n        .then(scoreData => {\n          console.log(scoreData)\n          let scores = scoreData.categories;\n\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n          });\n          return fetch(details, options)\n          .then(response => {\n            handleResponse(response);\n          })\n          .then()\n        })\n      })\n    })\n    .catch(err => {\n    this.setState({\n      error: err.message\n    })\n  })\n}\n  render(){\n    const scoreItems = this.state.nameScore\n    let star = 'â€¢'\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Header />\n      <SearchBar \n      cityChanged={this.cityChanged}\n      handleSubmit={this.handleSubmit}/>\n      <CityName cityName={this.state.cityName} score={this.state.cityScore}/>\n      {this.state.cityName !== '' &&\n      <ul className=\"mainList\">\n      {this.state.NoResult === 0 ? <h2>Sorry, no records for that city.</h2> :\n        scoreItems.map((value,index) => {\n        return <Scores key={index}\n          name={value.name}\n          score={value.score_out_of_10} \n          bar={star.repeat(Math.floor(value.score_out_of_10))}\n          />\n      })}\n      </ul>}\n      \n    </div>\n  );\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}