{"ast":null,"code":"var _jsxFileName = \"/Users/rossmacdonald/Projects/comparecities/src/Map.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport ApiKey from './ApiKey';\nimport './Map.css';\nconst mapStyles = {\n  height: \"100%\",\n  width: \"100%\",\n  position: 'static !important'\n};\nconst styles = [{\n  \"featureType\": \"all\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"weight\": \"2.00\"\n  }]\n}, {\n  \"featureType\": \"all\",\n  \"elementType\": \"geometry.stroke\",\n  \"stylers\": [{\n    \"color\": \"#9c9c9c\"\n  }]\n}, {\n  \"featureType\": \"all\",\n  \"elementType\": \"labels.text\",\n  \"stylers\": [{\n    \"visibility\": \"on\"\n  }]\n}, {\n  \"featureType\": \"landscape\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"color\": \"#f2f2f2\"\n  }]\n}, {\n  \"featureType\": \"landscape\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"landscape.man_made\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"saturation\": -100\n  }, {\n    \"lightness\": 45\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#eeeeee\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#7b7b7b\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"visibility\": \"simplified\"\n  }]\n}, {\n  \"featureType\": \"road.arterial\",\n  \"elementType\": \"labels.icon\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"color\": \"#46bcec\"\n  }, {\n    \"visibility\": \"on\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#c8d7d4\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#070707\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}];\nexport class MapContainer extends Component {\n  shouldComponentUpdate() {\n    return this.props.east === undefined ? false : true;\n  }\n\n  render() {\n    var ne = new this.props.google.maps.LatLng({\n      lat: this.props.north,\n      lng: this.props.east\n    });\n    var sw = new this.props.google.maps.LatLng({\n      lat: this.props.south,\n      lng: this.props.west\n    });\n    var bounds = new this.props.google.maps.LatLngBounds(sw, ne);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      centerAroundCurrentLocation: true,\n      zoom: 12,\n      style: mapStyles,\n      styles: styles,\n      center: {\n        lat: this.props.lattitude,\n        lng: this.props.longitude\n      },\n      bounds: bounds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: ApiKey,\n  zoom: 12\n})(MapContainer);","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/comparecities/src/Map.js"],"names":["React","Component","Map","GoogleApiWrapper","ApiKey","mapStyles","height","width","position","styles","MapContainer","shouldComponentUpdate","props","east","undefined","render","ne","google","maps","LatLng","lat","north","lng","sw","south","west","bounds","LatLngBounds","lattitude","longitude","apiKey","zoom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport ApiKey from './ApiKey';\nimport './Map.css'\n\nconst mapStyles = {\n  height: \"100%\",\n  width: \"100%\",\n  position: 'static !important',\n  \n};\nconst styles = [\n  {\n      \"featureType\": \"all\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"weight\": \"2.00\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"all\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#9c9c9c\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"all\",\n      \"elementType\": \"labels.text\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"color\": \"#f2f2f2\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffffff\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape.man_made\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffffff\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"saturation\": -100\n          },\n          {\n              \"lightness\": 45\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#eeeeee\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#7b7b7b\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffffff\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"visibility\": \"simplified\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"transit\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"color\": \"#46bcec\"\n          },\n          {\n              \"visibility\": \"on\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#c8d7d4\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#070707\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffffff\"\n          }\n      ]\n  }\n]\n\nexport class MapContainer extends Component {\n\n    shouldComponentUpdate(){\n        return this.props.east === undefined ? false:true\n    }\n\n  render() {\n     \n  var ne = new this.props.google.maps.LatLng({ lat: this.props.north, lng: this.props.east })\n  var sw = new this.props.google.maps.LatLng({ lat: this.props.south, lng: this.props.west })\n  var bounds = new this.props.google.maps.LatLngBounds(sw,ne);\n\n  \n    return (\n      <div id=\"mapContainer\">\n      <Map\n        google={this.props.google}\n        centerAroundCurrentLocation={true}\n        zoom= {12}\n        style={mapStyles}\n        styles={styles}\n        center={{\n            lat: this.props.lattitude,\n            lng: this.props.longitude\n        }}\n        bounds={bounds}>\n        </Map>\n      \n      </div>\n    );\n  }\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: ApiKey,\n  zoom: 12\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}