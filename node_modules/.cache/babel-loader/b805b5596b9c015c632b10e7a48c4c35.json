{"ast":null,"code":"var _jsxFileName = \"/Users/rossmacdonald/Projects/comparecities/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport Nav from './Nav';\nimport SearchBar from './SearchBar';\nimport Scores from './Scores';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetList = () => {\n      this.setState({\n        city: \"\",\n        nameScore: [],\n        cityScore: \"\",\n        cityName: \"\"\n      });\n    };\n\n    this.cityChanged = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.resetList();\n      const options = {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      let rawData;\n      let urbanData;\n      let scores;\n      let wrong = \"Something went wrong, please try again later\";\n      fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`, options).then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n\n        return response.json();\n      }).then(data => {\n        this.setState({\n          firstData: data.count\n        });\n        console.log(data);\n        let searchResults = \"city:search-results\";\n        rawData = data._embedded[searchResults][0]._links[\"city:item\"].href;\n        return fetch(rawData, options);\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n\n        return response.json();\n      }).then(newData => {\n        urbanData = newData._links[\"city:urban_area\"].href;\n        return fetch(urbanData, options).then(response => {\n          if (!response.ok) {\n            throw new Error(wrong);\n          }\n\n          return response.json();\n        }).then(newerData => {\n          this.setState({\n            cityName: [...this.state.cityName, newerData.full_name]\n          });\n          console.log(newerData);\n          scores = newerData._links[\"ua:scores\"].href;\n          return fetch(scores, options).then(response => {\n            if (!response.ok) {\n              throw new Error(wrong);\n            }\n\n            return response.json();\n          }).then(scoreData => {\n            console.log(scoreData);\n            console.log(scoreData.categories);\n            let scores = scoreData.categories;\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n            });\n          });\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      city: \"\",\n      nameScore: [],\n      cityScore: \"\",\n      cityName: \"\"\n    };\n  }\n\n  render() {\n    const scoreItems = this.state.nameScore;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      cityChanged: this.cityChanged,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, this.state.cityName), this.state.firstData === 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, \"Sorry, we don't have records for that city.\") : scoreItems.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Scores, {\n        key: index,\n        name: value.name,\n        score: value.score_out_of_10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/comparecities/src/App.js"],"names":["React","Component","Header","Nav","SearchBar","Scores","App","constructor","props","resetList","setState","city","nameScore","cityScore","cityName","cityChanged","event","target","value","handleSubmit","preventDefault","options","method","headers","rawData","urbanData","scores","wrong","fetch","state","then","response","ok","Error","json","data","firstData","count","console","log","searchResults","_embedded","_links","href","newData","newerData","full_name","scoreData","categories","teleport_city_score","catch","err","error","message","render","scoreItems","map","index","name","score_out_of_10"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport Nav from './Nav'\nimport SearchBar from './SearchBar'\nimport Scores from './Scores'\n\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n  this.state = {\n    city: \"\",\n    nameScore: [],\n    cityScore: \"\",\n    cityName: \"\"\n  }\n}\n  resetList = () => {\n    this.setState({\n      city: \"\",\n      nameScore: [],\n      cityScore: \"\",\n      cityName: \"\"\n    })\n  }\n\n  cityChanged = (event) => {\n    this.setState({\n      city: event.target.value\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.resetList();\n  const options =  {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  }\n  let rawData;\n  let urbanData;\n  let scores;\n  let wrong = \"Something went wrong, please try again later\"\n  fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`,options)\n  .then(response => {\n    if(!response.ok) {\n      throw new Error(wrong);\n    }\n    return response.json();\n  })\n  .then(data => {\n    this.setState({firstData: data.count})\n    console.log(data)\n    let searchResults = \"city:search-results\"\n    rawData = data._embedded[searchResults][0]._links[\"city:item\"].href;\n    return fetch(rawData,options)\n  })\n    .then(response => {\n      if(!response.ok){\n        throw new Error(wrong);\n      }\n      return response.json();\n    })\n    .then(newData => {\n      urbanData = newData._links[\"city:urban_area\"].href\n      return fetch(urbanData,options)\n      .then(response => {\n        if(!response.ok){\n          throw new Error(wrong);\n        }\n        return response.json();\n      })\n      .then(newerData => {\n        this.setState({cityName: [...this.state.cityName, newerData.full_name]})\n        console.log(newerData)\n        scores = newerData._links[\"ua:scores\"].href\n        return fetch(scores, options)\n        .then(response => {\n          if (!response.ok){\n            throw new Error(wrong);\n          }\n          return response.json()\n        })\n        .then(scoreData => {\n          console.log(scoreData)\n          console.log(scoreData.categories)\n          let scores = scoreData.categories;\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n          });\n        })\n      })\n    })\n    .catch(err => {\n    this.setState({\n      error: err.message\n    })\n  })\n}\n  render(){\n    const scoreItems = this.state.nameScore\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Header />\n      <SearchBar \n      cityChanged={this.cityChanged}\n      handleSubmit={this.handleSubmit}/>\n      <ul>\n        <h2>{this.state.cityName}</h2>\n      {this.state.firstData === 0 ? <h2>Sorry, we don't have records for that city.</h2> :\n        scoreItems.map((value,index) => {\n        return <Scores key={index}\n          name={value.name}\n          score={value.score_out_of_10} \n          />\n      })}\n      </ul>\n      \n    </div>\n  );\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}