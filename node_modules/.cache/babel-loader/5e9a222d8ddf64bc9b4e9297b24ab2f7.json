{"ast":null,"code":"var _jsxFileName = \"/Users/rossmacdonald/Projects/comparecities/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport Nav from './Nav';\nimport SearchBar from './SearchBar';\nimport Scores from './Scores';\nimport CityName from './CityName';\nimport MapContainer from './Map';\nimport Footer from './Footer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetList = () => {\n      this.setState({\n        nameScore: [],\n        cityScore: \"\",\n        cityName: \"\",\n        detailInfo: [],\n        latLong: {}\n      });\n    };\n\n    this.cityChanged = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        latLong: {}\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.resetList();\n      const options = {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      let uaAPI;\n      let scoresAPI;\n      let scores;\n      let details;\n      let coordinates;\n      let wrong = \"Something went wrong, please try again later\";\n      fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`, options).then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n\n        return response.json();\n      }).then(data => {\n        this.setState({\n          NoResult: data.count\n        });\n        console.log(data);\n        let searchResults = \"city:search-results\";\n        uaAPI = data._embedded[searchResults][0]._links[\"city:item\"].href;\n        return fetch(uaAPI, options);\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n\n        return response.json();\n      }).then(newData => {\n        scoresAPI = newData._links[\"city:urban_area\"].href;\n        return fetch(scoresAPI, options).then(response => {\n          if (!response.ok) {\n            throw new Error(wrong);\n          }\n\n          return response.json();\n        }).then(newerData => {\n          coordinates = newerData.bounding_box.latlon;\n          this.setState({\n            cityName: [...this.state.cityName, newerData.full_name],\n            latLong: {\n              west: coordinates.west,\n              north: coordinates.north,\n              south: coordinates.south,\n              east: coordinates.east\n            }\n          });\n          console.log(newerData);\n          details = newerData._links[\"ua:details\"].href;\n          scores = newerData._links[\"ua:scores\"].href;\n          return fetch(scores, options).then(response => {\n            if (!response.ok) {\n              throw new Error(wrong);\n            }\n\n            return response.json();\n          }).then(scoreData => {\n            let scores = scoreData.categories;\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n            });\n            return fetch(details, options).then(response => {\n              if (!response.ok) {\n                throw new Error(wrong);\n              }\n\n              return response.json();\n            }).then(detailsData => {\n              console.log(detailsData);\n              this.setState({\n                detailInfo: [...this.state.detailInfo, ...detailsData.categories]\n              });\n              console.log(this.state.detailInfo);\n            });\n          });\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      city: \"\",\n      nameScore: [],\n      cityScore: \"\",\n      cityName: \"\",\n      detailInfo: [],\n      latLong: {}\n    };\n  }\n\n  render() {\n    const north = this.state.latLong.north;\n    const south = this.state.latLong.south;\n    const east = this.state.latLong.east;\n    const west = this.state.latLong.west;\n    const lat = (north + south) / 2;\n    const long = (east + west) / 2;\n    let star = 'â€¢';\n    const scoreItems = this.state.nameScore;\n    const scoresList = scoreItems.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Scores, {\n        key: index,\n        name: value.name,\n        score: value.score_out_of_10,\n        bar: star.repeat(Math.floor(value.score_out_of_10)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, {\n      cityChanged: this.cityChanged,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(MapContainer, {\n      north: north,\n      west: west,\n      south: south,\n      east: east,\n      lattitude: lat,\n      longitude: long,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(CityName, {\n      cityName: this.state.cityName,\n      score: this.state.cityScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }), this.state.cityName !== '' && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"mainList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, this.state.NoResult === 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 36\n      }\n    }, \"Sorry, no records for that city.\") : scoresList), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/comparecities/src/App.js"],"names":["React","Component","Header","Nav","SearchBar","Scores","CityName","MapContainer","Footer","App","constructor","props","resetList","setState","nameScore","cityScore","cityName","detailInfo","latLong","cityChanged","event","city","target","value","componentDidMount","handleSubmit","preventDefault","options","method","headers","uaAPI","scoresAPI","scores","details","coordinates","wrong","fetch","state","then","response","ok","Error","json","data","NoResult","count","console","log","searchResults","_embedded","_links","href","newData","newerData","bounding_box","latlon","full_name","west","north","south","east","scoreData","categories","teleport_city_score","detailsData","catch","err","error","message","render","lat","long","star","scoreItems","scoresList","map","index","name","score_out_of_10","repeat","Math","floor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport Nav from './Nav'\nimport SearchBar from './SearchBar'\nimport Scores from './Scores'\nimport CityName from './CityName'\nimport MapContainer from './Map'\nimport Footer from './Footer'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n  this.state = {\n    city: \"\",\n    nameScore: [],\n    cityScore: \"\",\n    cityName: \"\",\n    detailInfo: [],\n    latLong: {\n      \n    }\n  }\n}\n  resetList = () => {\n    this.setState({\n      nameScore: [],\n      cityScore: \"\",\n      cityName: \"\",\n      detailInfo: [],\n      latLong: {}\n    })\n  }\n  cityChanged = (event) => {\n    this.setState({\n      city: event.target.value\n    });\n  }\n  componentDidMount = () => {\n    this.setState({\n      latLong: {}\n    })\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.resetList();\n  const options =  {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  }\n  let uaAPI;\n  let scoresAPI;\n  let scores;\n  let details;\n  let coordinates;\n  let wrong = \"Something went wrong, please try again later\"\n  fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`,options)\n  .then(response => {\n    if(!response.ok) {\n      throw new Error(wrong);\n    }\n    return response.json();\n  })\n  .then(data => {\n    this.setState({NoResult: data.count})\n    console.log(data)\n    let searchResults = \"city:search-results\"\n    uaAPI = data._embedded[searchResults][0]._links[\"city:item\"].href;\n    return fetch(uaAPI,options)\n  })\n    .then(response => {\n      if(!response.ok){\n        throw new Error(wrong);\n      }\n      return response.json();\n    })\n    .then(newData => {\n      scoresAPI = newData._links[\"city:urban_area\"].href\n      return fetch(scoresAPI,options)\n      .then(response => {\n        if(!response.ok){\n          throw new Error(wrong);\n        }\n        return response.json();\n      })\n      .then(newerData => {\n        coordinates = newerData.bounding_box.latlon\n        this.setState({\n          cityName: [...this.state.cityName, newerData.full_name],\n          latLong: {west: coordinates.west, north: coordinates.north, south: coordinates.south, east: coordinates.east}})\n        console.log(newerData)\n        details = newerData._links[\"ua:details\"].href\n        scores = newerData._links[\"ua:scores\"].href\n        return fetch(scores, options)\n        .then(response => {\n          if (!response.ok){\n            throw new Error(wrong);\n          }\n          return response.json()\n        })\n        .then(scoreData => {\n          let scores = scoreData.categories;\n\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n          });\n          return fetch(details, options)\n          .then(response => {\n            if (!response.ok){ \n              throw new Error(wrong)\n            }\n            return response.json()\n          })\n          .then(detailsData => {\n            console.log(detailsData)\n            this.setState({\n              detailInfo: [...this.state.detailInfo, ...detailsData.categories]\n            })\n            console.log(this.state.detailInfo)\n          })\n        })\n      })\n    })\n    .catch(err => {\n    this.setState({\n      error: err.message\n    })\n  })\n}\n  render(){\n    \n   const north = this.state.latLong.north\n   const south = this.state.latLong.south\n   const east = this.state.latLong.east\n   const west = this.state.latLong.west\n    const lat = (north+south)/2\n    const long = (east+west)/2\n    let star = 'â€¢'\n    const scoreItems = this.state.nameScore\n    const scoresList = scoreItems.map((value,index) => {\n      return <Scores key={index}\n        name={value.name}\n        score={value.score_out_of_10}\n        bar={star.repeat(Math.floor(value.score_out_of_10))}/>\n    })\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Header />\n      <SearchBar \n        cityChanged={this.cityChanged}\n        handleSubmit={this.handleSubmit}/>\n      <MapContainer\n        north={north} \n        west={west} \n        south={south} \n        east={east} \n        lattitude={lat} \n        longitude={long} />\n      <CityName \n        cityName={this.state.cityName} \n        score={this.state.cityScore}/>\n      {this.state.cityName !== '' &&\n      <ul className=\"mainList\">\n      {this.state.NoResult === 0 ? <h2>Sorry, no records for that city.</h2> : scoresList}\n      </ul>}\n      <Footer />\n    </div>\n  );\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}