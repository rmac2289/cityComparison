{"ast":null,"code":"import React from 'react';\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  this.resetList();\n  const options = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  let rawData;\n  let urbanData;\n  let scores;\n  let wrong = \"Something went wrong, please try again later\";\n  fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`, options).then(response => {\n    if (!response.ok) {\n      throw new Error(wrong);\n    }\n\n    return response.json();\n  }).then(data => {\n    this.setState({\n      firstData: data.count\n    });\n    console.log(data);\n    let searchResults = \"city:search-results\";\n    rawData = data._embedded[searchResults][0]._links[\"city:item\"].href;\n    return fetch(rawData, options);\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(wrong);\n    }\n\n    return response.json();\n  }).then(newData => {\n    urbanData = newData._links[\"city:urban_area\"].href;\n    return fetch(urbanData, options).then(response => {\n      if (!response.ok) {\n        throw new Error(wrong);\n      }\n\n      return response.json();\n    }).then(newerData => {\n      this.setState({\n        cityName: [...this.state.cityName, newerData.full_name]\n      });\n      console.log(newerData);\n      scores = newerData._links[\"ua:scores\"].href;\n      return fetch(scores, options).then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n\n        return response.json();\n      }).then(scoreData => {\n        console.log(scoreData);\n        console.log(scoreData.categories);\n        let scores = scoreData.categories;\n        this.setState({\n          nameScore: [...this.state.nameScore, ...scores],\n          cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n        });\n      });\n    });\n  }).catch(err => {\n    this.setState({\n      error: err.message\n    });\n  });\n};\n\nexport default handleSubmit;","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/comparecities/src/HandleSubmit.js"],"names":["React","handleSubmit","event","preventDefault","resetList","options","method","headers","rawData","urbanData","scores","wrong","fetch","state","city","then","response","ok","Error","json","data","setState","firstData","count","console","log","searchResults","_embedded","_links","href","newData","newerData","cityName","full_name","scoreData","categories","nameScore","cityScore","teleport_city_score","catch","err","error","message"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    this.resetList();\n  const options =  {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  }\n  let rawData;\n  let urbanData;\n  let scores;\n  let wrong = \"Something went wrong, please try again later\"\n  fetch(`https://api.teleport.org/api/cities/?search=${this.state.city}`,options)\n  .then(response => {\n    if(!response.ok) {\n      throw new Error(wrong);\n    }\n    return response.json();\n  })\n  .then(data => {\n    this.setState({firstData: data.count})\n    console.log(data)\n    let searchResults = \"city:search-results\"\n    rawData = data._embedded[searchResults][0]._links[\"city:item\"].href;\n    return fetch(rawData,options)\n  })\n    .then(response => {\n      if(!response.ok){\n        throw new Error(wrong);\n      }\n      return response.json();\n    })\n    .then(newData => {\n      urbanData = newData._links[\"city:urban_area\"].href\n      return fetch(urbanData,options)\n      .then(response => {\n        if(!response.ok){\n          throw new Error(wrong);\n        }\n        return response.json();\n      })\n      .then(newerData => {\n        this.setState({cityName: [...this.state.cityName, newerData.full_name]})\n        console.log(newerData)\n        scores = newerData._links[\"ua:scores\"].href\n        return fetch(scores, options)\n        .then(response => {\n          if (!response.ok){\n            throw new Error(wrong);\n          }\n          return response.json()\n        })\n        .then(scoreData => {\n          console.log(scoreData)\n          console.log(scoreData.categories)\n          let scores = scoreData.categories;\n\n            this.setState({\n              nameScore: [...this.state.nameScore, ...scores],\n              cityScore: [...this.state.cityScore, scoreData.teleport_city_score]\n          });\n        })\n      })\n    })\n    .catch(err => {\n    this.setState({\n      error: err.message\n    })\n  })\n}\n\nexport default handleSubmit;"]},"metadata":{},"sourceType":"module"}