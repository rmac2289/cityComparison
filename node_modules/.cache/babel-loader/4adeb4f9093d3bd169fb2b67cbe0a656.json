{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _urls = _interopRequireDefault(require(\"./reference_data/urls\"));\n\nvar _locations = _interopRequireDefault(require(\"./reference_data/locations\"));\n\nvar _location = _interopRequireDefault(require(\"./reference_data/location\"));\n\nvar _airlines = _interopRequireDefault(require(\"./reference_data/airlines\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * A namespaced client for the\n * `/v2/reference-data` endpoints\n *\n * Access via the {Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.referenceData.urls;\n * ```\n *\n * @param {Client} client\n * @property {Urls} urls\n * @protected\n */\n\n\nvar ReferenceData = /*#__PURE__*/function () {\n  function ReferenceData(client) {\n    _classCallCheck(this, ReferenceData);\n\n    this.client = client;\n    this.urls = new _urls[\"default\"](client);\n    this.locations = new _locations[\"default\"](client);\n    this.airlines = new _airlines[\"default\"](client);\n  }\n  /**\n   * The namespace for the Location APIs - accessing a specific location\n   *\n   * @param  {string} [locationId]  The ID of the location to search for\n   * @return {Location}\n   **/\n\n\n  _createClass(ReferenceData, [{\n    key: \"location\",\n    value: function location(locationId) {\n      return new _location[\"default\"](this.client, locationId);\n    }\n  }]);\n\n  return ReferenceData;\n}();\n\nvar _default = ReferenceData;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["../../../src/amadeus/namespaces/reference_data.js"],"names":["ReferenceData","Urls","Locations","Airlines","locationId","Location"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;IAeMA,a;AACJ,WAAA,aAAA,CAAA,MAAA,EAAoB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;;AAClB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,IAAA,GAAiB,IAAIC,KAAAA,CAAJ,SAAIA,CAAJ,CAAjB,MAAiB,CAAjB;AACA,SAAA,SAAA,GAAiB,IAAIC,UAAAA,CAAJ,SAAIA,CAAJ,CAAjB,MAAiB,CAAjB;AACA,SAAA,QAAA,GAAiB,IAAIC,SAAAA,CAAJ,SAAIA,CAAJ,CAAjB,MAAiB,CAAjB;AACD;AAED;;;;;;;;;;6BAMSC,U,EAAY;AACnB,aAAO,IAAIC,SAAAA,CAAJ,SAAIA,CAAJ,CAAa,KAAb,MAAA,EAAP,UAAO,CAAP;AACD;;;;;;eAGYL,a","sourcesContent":["import Urls      from './reference_data/urls';\nimport Locations from './reference_data/locations';\nimport Location  from './reference_data/location';\nimport Airlines  from './reference_data/airlines';\n\n/**\n * A namespaced client for the\n * `/v2/reference-data` endpoints\n *\n * Access via the {Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.referenceData.urls;\n * ```\n *\n * @param {Client} client\n * @property {Urls} urls\n * @protected\n */\nclass ReferenceData {\n  constructor(client) {\n    this.client    = client;\n    this.urls      = new Urls(client);\n    this.locations = new Locations(client);\n    this.airlines  = new Airlines(client);\n  }\n\n  /**\n   * The namespace for the Location APIs - accessing a specific location\n   *\n   * @param  {string} [locationId]  The ID of the location to search for\n   * @return {Location}\n   **/\n  location(locationId) {\n    return new Location(this.client, locationId);\n  }\n}\n\nexport default ReferenceData;\n"]},"metadata":{},"sourceType":"script"}