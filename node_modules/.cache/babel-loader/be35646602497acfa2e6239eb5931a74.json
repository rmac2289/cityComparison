{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * A namespaced client for the\n * `/v2/travel/trip-parser-jobs/{jobId}/result` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.travel.tripParserJobs.result;\n * ```\n *\n * @param {Client} client\n */\n\n\nvar Result = /*#__PURE__*/function () {\n  function Result(client, jobId) {\n    _classCallCheck(this, Result);\n\n    this.client = client;\n    this._jobId = jobId;\n  }\n  /**\n   * To get the complete result of parsing as a aggregated view of Trip.\n   *\n   * @return {Promise.<Response,ResponseError>} a Promise\n   *\n   * To get the complete result of parsing job ID 'XXX'\n   *\n   * ```js\n   * amadeus.travel.tripParserJobs('XXX').result.get();\n   * ```\n   */\n\n\n  _createClass(Result, [{\n    key: \"get\",\n    value: function get() {\n      if (this._jobId) return this.client.get('/v2/travel/trip-parser-jobs/' + this._jobId + '/result');else throw new Error('MISSING_REQUIRED_PARAMETER');\n    }\n  }]);\n\n  return Result;\n}();\n\nvar _default = Result;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["../../../../../src/amadeus/namespaces/travel/trip_parser_jobs/result.js"],"names":["Result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;IAaMA,M;AACJ,WAAA,MAAA,CAAA,MAAA,EAAA,KAAA,EAA2B;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AACzB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,MAAA,GAAA,KAAA;AACD;AAED;;;;;;;;;;;;;;;0BAWM;AACJ,UAAI,KAAJ,MAAA,EACE,OAAO,KAAA,MAAA,CAAA,GAAA,CAAgB,iCAAiC,KAAjC,MAAA,GADzB,SACS,CAAP,CADF,KAGE,MAAM,IAAA,KAAA,CAAN,4BAAM,CAAN;AACH;;;;;;eAGYA,M","sourcesContent":["/**\n * A namespaced client for the\n * `/v2/travel/trip-parser-jobs/{jobId}/result` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.travel.tripParserJobs.result;\n * ```\n *\n * @param {Client} client\n */\nclass Result {\n  constructor(client, jobId) {\n    this.client = client;\n    this._jobId = jobId;\n  }\n\n  /**\n   * To get the complete result of parsing as a aggregated view of Trip.\n   *\n   * @return {Promise.<Response,ResponseError>} a Promise\n   *\n   * To get the complete result of parsing job ID 'XXX'\n   *\n   * ```js\n   * amadeus.travel.tripParserJobs('XXX').result.get();\n   * ```\n   */\n  get() {\n    if (this._jobId)\n      return this.client.get('/v2/travel/trip-parser-jobs/' + this._jobId + '/result');\n    else\n      throw new Error('MISSING_REQUIRED_PARAMETER');\n  }\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"script"}