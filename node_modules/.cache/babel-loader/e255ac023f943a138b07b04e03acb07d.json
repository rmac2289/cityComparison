{"ast":null,"code":"var _jsxFileName = \"/Users/rossmacdonald/Projects/comparecities/src/Map.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport ApiKey from './ApiKey';\nimport './Map.css';\nconst mapStyles = {\n  height: \"100%\",\n  width: \"100%\",\n  position: 'static !important'\n};\nconst styles = [{\n  \"featureType\": \"all\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"weight\": \"2.00\"\n  }]\n}, {\n  \"featureType\": \"all\",\n  \"elementType\": \"geometry.stroke\",\n  \"stylers\": [{\n    \"color\": \"#9c9c9c\"\n  }]\n}, {\n  \"featureType\": \"all\",\n  \"elementType\": \"labels.text\",\n  \"stylers\": [{\n    \"visibility\": \"on\"\n  }]\n}, {\n  \"featureType\": \"landscape\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"color\": \"#f2f2f2\"\n  }]\n}, {\n  \"featureType\": \"landscape\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"landscape.man_made\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"saturation\": -100\n  }, {\n    \"lightness\": 45\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#eeeeee\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#7b7b7b\"\n  }]\n}, {\n  \"featureType\": \"road\",\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}, {\n  \"featureType\": \"road.highway\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"visibility\": \"simplified\"\n  }]\n}, {\n  \"featureType\": \"road.arterial\",\n  \"elementType\": \"labels.icon\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"all\",\n  \"stylers\": [{\n    \"color\": \"#46bcec\"\n  }, {\n    \"visibility\": \"on\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"geometry.fill\",\n  \"stylers\": [{\n    \"color\": \"#c8d7d4\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"labels.text.fill\",\n  \"stylers\": [{\n    \"color\": \"#070707\"\n  }]\n}, {\n  \"featureType\": \"water\",\n  \"elementType\": \"labels.text.stroke\",\n  \"stylers\": [{\n    \"color\": \"#ffffff\"\n  }]\n}];\nexport class MapContainer extends Component {\n  shouldComponentUpdate() {\n    return this.props.east === undefined ? false : true;\n  }\n\n  render() {\n    const ne = new this.props.google.maps.LatLng({\n      lat: this.props.north,\n      lng: this.props.east\n    });\n    const sw = new this.props.google.maps.LatLng({\n      lat: this.props.south,\n      lng: this.props.west\n    });\n    const bounds = new this.props.google.maps.LatLngBounds(sw, ne);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mapContainer\",\n      styles: {\n        background: rgb(0, 0, 0, 0.7)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      centerAroundCurrentLocation: true,\n      zoom: 12,\n      style: mapStyles,\n      styles: styles,\n      center: {\n        lat: this.props.lattitude,\n        lng: this.props.longitude\n      },\n      bounds: bounds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: ApiKey\n})(MapContainer);","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/comparecities/src/Map.js"],"names":["React","Component","Map","GoogleApiWrapper","ApiKey","mapStyles","height","width","position","styles","MapContainer","shouldComponentUpdate","props","east","undefined","render","ne","google","maps","LatLng","lat","north","lng","sw","south","west","bounds","LatLngBounds","background","rgb","lattitude","longitude","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport ApiKey from './ApiKey';\nimport './Map.css'\n\nconst mapStyles = {\n    height: \"100%\",\n    width: \"100%\",\n    position: 'static !important',\n\n};\nconst styles = [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"weight\": \"2.00\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#9c9c9c\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": -100\n            },\n            {\n                \"lightness\": 45\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#eeeeee\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7b7b7b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#46bcec\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#c8d7d4\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#070707\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    }\n]\n\nexport class MapContainer extends Component {\n\n    shouldComponentUpdate() {\n        return this.props.east === undefined ? false : true\n    }\n\n    render() {\n\n        const ne = new this.props.google.maps.LatLng({ lat: this.props.north, lng: this.props.east })\n        const sw = new this.props.google.maps.LatLng({ lat: this.props.south, lng: this.props.west })\n        const bounds = new this.props.google.maps.LatLngBounds(sw, ne);\n\n\n        return (\n            <div id=\"mapContainer\" styles={{background: rgb(0,0,0,0.7)}}>\n                <Map\n                    google={this.props.google}\n                    centerAroundCurrentLocation={true}\n                    zoom={12}\n                    style={mapStyles}\n                    styles={styles}\n                    center={{\n                        lat: this.props.lattitude,\n                        lng: this.props.longitude\n                    }}\n                    bounds={bounds}>\n                </Map>\n\n            </div>\n        );\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: ApiKey,\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}