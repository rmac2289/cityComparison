{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _https = _interopRequireDefault(require(\"https\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar HOSTS = {\n  'test': 'test.api.amadeus.com',\n  'production': 'api.amadeus.com'\n};\nvar RECOGNIZED_OPTIONS = ['clientId', 'clientSecret', 'logger', 'logLevel', 'hostname', 'host', 'customAppId', 'customAppVersion', 'http', 'ssl', 'port'];\n/**\n * Helper class for validating parameters\n * @protected\n */\n\nvar Validator = /*#__PURE__*/function () {\n  function Validator() {\n    _classCallCheck(this, Validator);\n  }\n\n  _createClass(Validator, [{\n    key: \"validateAndInitialize\",\n\n    /**\n     * Initialise the client's default value, ensuring the required values are\n     * present\n     *\n     * @param  {Client} client the client object to set the defaults for\n     * @param  {Object} options the associative array of options passed to the\n     *  client on initialization\n     */\n    value: function validateAndInitialize(client, options) {\n      this.initializeClientCredentials(client, options);\n      this.initializeLogger(client, options);\n      this.initializeHost(client, options);\n      this.initializeCustomApp(client, options);\n      this.initializeHttp(client, options);\n      this.warnOnUnrecognizedOptions(options, client, RECOGNIZED_OPTIONS);\n    } // PRIVATE\n\n  }, {\n    key: \"initializeClientCredentials\",\n    value: function initializeClientCredentials(client, options) {\n      client.clientId = this.initRequired('clientId', options);\n      client.clientSecret = this.initRequired('clientSecret', options);\n    }\n  }, {\n    key: \"initializeLogger\",\n    value: function initializeLogger(client, options) {\n      client.logger = this.initOptional('logger', options, console);\n      client.logLevel = this.initOptional('logLevel', options, 'silent');\n    }\n  }, {\n    key: \"initializeHost\",\n    value: function initializeHost(client, options) {\n      var hostname = this.initOptional('hostname', options, 'test');\n      client.host = this.initOptional('host', options, HOSTS[hostname]);\n      client.port = this.initOptional('port', options, 443);\n      client.ssl = this.initOptional('ssl', options, true);\n    }\n  }, {\n    key: \"initializeCustomApp\",\n    value: function initializeCustomApp(client, options) {\n      client.customAppId = this.initOptional('customAppId', options);\n      client.customAppVersion = this.initOptional('customAppVersion', options);\n    }\n  }, {\n    key: \"initializeHttp\",\n    value: function initializeHttp(client, options) {\n      var network = client.ssl ? _https[\"default\"] : _http[\"default\"];\n      client.http = this.initOptional('http', options, network);\n    }\n  }, {\n    key: \"initRequired\",\n    value: function initRequired(key, options) {\n      var result = this.initOptional(key, options);\n      if (!result) throw new ArgumentError(\"Missing required argument: \".concat(key));\n      return result;\n    }\n  }, {\n    key: \"initOptional\",\n    value: function initOptional(key, options) {\n      var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var value = options[key];\n      var envKey = \"AMADEUS_\".concat(key.toUpperCase());\n\n      if (value == undefined) {\n        value = options[key];\n      }\n\n      if (value == undefined) {\n        value = process.env[envKey];\n      }\n\n      if (value == undefined) {\n        value = fallback;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"warnOnUnrecognizedOptions\",\n    value: function warnOnUnrecognizedOptions(options, client, recognizedOptions) {\n      Object.keys(options).forEach(function (key) {\n        if (recognizedOptions.indexOf(key) === -1 && client.warn()) {\n          client.logger.log(\"Unrecognized option: \".concat(key));\n        }\n      });\n      return null;\n    }\n  }]);\n\n  return Validator;\n}(); // PRIVATE\n\n\nvar ArgumentError = /*#__PURE__*/function (_Error) {\n  _inherits(ArgumentError, _Error);\n\n  function ArgumentError(message) {\n    var _this;\n\n    _classCallCheck(this, ArgumentError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArgumentError).call(this, message));\n    _this.name = 'ArgumentError';\n    return _this;\n  }\n\n  return ArgumentError;\n}(_wrapNativeSuper(Error));\n\nvar _default = Validator;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["../../../src/amadeus/client/validator.js"],"names":["HOSTS","RECOGNIZED_OPTIONS","Validator","client","options","hostname","network","https","http","key","result","fallback","value","envKey","process","recognizedOptions","Object","ArgumentError","Error"],"mappings":"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","sourcesContent":["import https     from 'https';\nimport http      from 'http';\n\nconst HOSTS = {\n  'test'       : 'test.api.amadeus.com',\n  'production' : 'api.amadeus.com'\n};\n\nconst RECOGNIZED_OPTIONS = [\n  'clientId',\n  'clientSecret',\n  'logger',\n  'logLevel',\n  'hostname',\n  'host',\n  'customAppId',\n  'customAppVersion',\n  'http',\n  'ssl',\n  'port'\n];\n\n/**\n * Helper class for validating parameters\n * @protected\n */\nclass Validator {\n\n  /**\n   * Initialise the client's default value, ensuring the required values are\n   * present\n   *\n   * @param  {Client} client the client object to set the defaults for\n   * @param  {Object} options the associative array of options passed to the\n   *  client on initialization\n   */\n  validateAndInitialize(client, options) {\n    this.initializeClientCredentials(client, options);\n    this.initializeLogger(client, options);\n    this.initializeHost(client, options);\n    this.initializeCustomApp(client, options);\n    this.initializeHttp(client, options);\n\n    this.warnOnUnrecognizedOptions(options, client, RECOGNIZED_OPTIONS);\n  }\n\n  // PRIVATE\n\n  initializeClientCredentials(client, options) {\n    client.clientId = this.initRequired('clientId', options);\n    client.clientSecret = this.initRequired('clientSecret', options);\n  }\n\n  initializeLogger(client, options) {\n    client.logger    = this.initOptional('logger', options, console);\n    client.logLevel = this.initOptional('logLevel', options, 'silent');\n  }\n\n  initializeHost(client, options) {\n    let hostname = this.initOptional('hostname', options, 'test');\n    client.host  = this.initOptional('host', options, HOSTS[hostname]);\n    client.port  = this.initOptional('port', options, 443);\n    client.ssl   = this.initOptional('ssl', options, true);\n  }\n\n  initializeCustomApp(client, options) {\n    client.customAppId = this.initOptional('customAppId', options);\n    client.customAppVersion = this.initOptional('customAppVersion', options);\n  }\n\n  initializeHttp(client, options) {\n    let network = client.ssl ? https : http;\n    client.http = this.initOptional('http', options, network);\n  }\n\n  initRequired(key, options) {\n    let result = this.initOptional(key, options);\n    if (!result) throw new ArgumentError(`Missing required argument: ${key}`);\n    return result;\n  }\n\n  initOptional(key, options, fallback = null) {\n    let value = options[key];\n    let envKey = `AMADEUS_${key.toUpperCase()}`;\n    if (value == undefined) { value = options[key]; }\n    if (value == undefined) { value = process.env[envKey]; }\n    if (value == undefined) { value = fallback; }\n    return value;\n  }\n\n  warnOnUnrecognizedOptions(options, client, recognizedOptions) {\n    Object.keys(options).forEach((key) => {\n      if (recognizedOptions.indexOf(key) === -1 && client.warn()) {\n        client.logger.log(`Unrecognized option: ${key}`);\n      }\n    });\n    return null;\n  }\n}\n\n// PRIVATE\n\nclass ArgumentError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ArgumentError';\n  }\n}\n\nexport default Validator;\n"]},"metadata":{},"sourceType":"script"}