{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _airports = _interopRequireDefault(require(\"./locations/airports\"));\n\nvar _pois = _interopRequireDefault(require(\"./locations/pois\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * A namespaced client for the\n * `/v2/reference-data/locations` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.referenceData.locations;\n * ```\n *\n * @param {Client} client\n * @property {Airports} airports\n */\n\n\nvar Locations = /*#__PURE__*/function () {\n  function Locations(client) {\n    _classCallCheck(this, Locations);\n\n    this.client = client;\n    this.airports = new _airports[\"default\"](client);\n    this.pointsOfInterest = new _pois[\"default\"](client);\n  }\n  /**\n   * Returns a list of airports and cities matching a given keyword.\n   *\n   * @param {Object} params\n   * @param {string} params.keyword keyword that should represent the start of\n   *   a word in a city or airport name or code\n   * @param {string} params.subType the type of location to search for\n   * @return {Promise.<Response,ResponseError>} a Promise\n   *\n   * Find any location starting with 'lon'\n   *\n   * ```js\n   * amadeus.referenceData.location.get({\n   *   keyword: 'lon',\n   *   subType: Amadeus.location.any\n   * });\n   * ```\n   */\n\n\n  _createClass(Locations, [{\n    key: \"get\",\n    value: function get() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.client.get('/v1/reference-data/locations', params);\n    }\n  }]);\n\n  return Locations;\n}();\n\nvar _default = Locations;\nexports[\"default\"] = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["../../../../src/amadeus/namespaces/reference_data/locations.js"],"names":["Locations","Airports","PointsOfInterest","params"],"mappings":";;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;IAcMA,S;AACJ,WAAA,SAAA,CAAA,MAAA,EAAoB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAClB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,QAAA,GAAgB,IAAIC,SAAAA,CAAJ,SAAIA,CAAJ,CAAhB,MAAgB,CAAhB;AACA,SAAA,gBAAA,GAAwB,IAAIC,KAAAA,CAAJ,SAAIA,CAAJ,CAAxB,MAAwB,CAAxB;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;0BAkBiB;AAAA,UAAbC,MAAa,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AACf,aAAO,KAAA,MAAA,CAAA,GAAA,CAAA,8BAAA,EAAP,MAAO,CAAP;AACD;;;;;;eAGYH,S","sourcesContent":["import Airports from './locations/airports';\nimport PointsOfInterest from './locations/pois';\n\n/**\n * A namespaced client for the\n * `/v2/reference-data/locations` endpoints\n *\n * Access via the {@link Amadeus} object\n *\n * ```js\n * let amadeus = new Amadeus();\n * amadeus.referenceData.locations;\n * ```\n *\n * @param {Client} client\n * @property {Airports} airports\n */\nclass Locations {\n  constructor(client) {\n    this.client = client;\n    this.airports = new Airports(client);\n    this.pointsOfInterest = new PointsOfInterest(client);\n  }\n\n  /**\n   * Returns a list of airports and cities matching a given keyword.\n   *\n   * @param {Object} params\n   * @param {string} params.keyword keyword that should represent the start of\n   *   a word in a city or airport name or code\n   * @param {string} params.subType the type of location to search for\n   * @return {Promise.<Response,ResponseError>} a Promise\n   *\n   * Find any location starting with 'lon'\n   *\n   * ```js\n   * amadeus.referenceData.location.get({\n   *   keyword: 'lon',\n   *   subType: Amadeus.location.any\n   * });\n   * ```\n   */\n  get(params = {}) {\n    return this.client.get('/v1/reference-data/locations', params);\n  }\n}\n\nexport default Locations;\n"]},"metadata":{},"sourceType":"script"}