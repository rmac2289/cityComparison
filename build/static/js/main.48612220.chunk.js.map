{"version":3,"sources":["Nav.js","Header.js","Footer.js","ErrorBoundary.js","SearchBar.js","Scores.js","CityName.js","ApiKey.js","MapStyles.js","Map.js","Salaries.js","CityImage.js","TabCategories.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","Header","id","Footer","props","href","ErrorBoundary","state","hasError","this","children","error","Component","SearchBar","onSubmit","handleSubmit","validate","validateInput","InputGroup","size","Prepend","Text","FormControl","required","value","onChange","cityChanged","aria-label","aria-describedby","Button","type","variant","Scores","rounded","x","precision","y","undefined","round_to_precision","score","pStyle","width","name","toLowerCase","style","CityName","cityName","Math","round","ApiKeys","mapsKey","POIKey","styles","mapStyles","height","position","MapContainer","latitude","google","centerAroundCurrentLocation","zoom","center","lat","lng","longitude","GoogleApiWrapper","apiKey","ApiKey","formatNumber","num","toString","replace","Salaries","target","rel","jobName","jobCity","jobSalary25","jobSalary75","CityImage","hidden","src","image","alt","TabCategories","Tabs","defaultActiveKey","Tab","eventKey","title","webPhoto","scoresList","salaryList","Main","useState","city","setCity","nameScore","setNameScore","cityScore","setCityScore","setCityName","setWebPhoto","latLong","setLatLong","salaryData","setSalaryData","map","index","key","score_out_of_10","job","salary_percentiles","percentile_25","jobSalary50","percentile_50","percentile_75","event","input","Error","length","preventDefault","wrong","fetch","then","response","ok","json","citySearchData","count","alert","console","log","_embedded","_links","cityData","urbanAreaData","scoreData","imageLink","salary","location","latlon","long","photos","web","teleport_city_score","categories","full_name","salaries","catch","err","message","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48612220.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css';\n\nexport default function Nav(){\n    return(\n        <nav className=\"navigation\">\n            \n            <ul>\n                <li></li>\n            </ul>\n\n        </nav>\n    )\n}","import React from 'react';\nimport './Header.css';\n\nexport default function Header(){\n    return (\n        <header className=\"header\">\n            <div className = \"title\">\n                 <h1>Your Best Life</h1>\n                 <p id=\"headerP\">the app that guides you where you're headed next \n                 <br/> \n                 <span id=\"span\">type in a possible destination and see what the data has to say</span></p>\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer(props){\n    return(\n        <footer>\n            <ul className=\"footerList\">\n            <li>Â© 2020 Ross MacDonald</li> \n            <li><a id=\"link\" href=\"https://ross-scott-macdonald.com\">check out my work</a></li>\n            </ul>\n        </footer>\n    )\n}","import React, { Component } from 'react';\n\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n  render() {\n    if (this.state.hasError) {      \n      return (\n        <h3>Something went wrong! City input has to be all letters and cannot be left blank.</h3>\n      );\n    }\n    return this.props.children;\n  } \n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\nimport './SearchBar.css';\nimport ErrorBoundary from './ErrorBoundary'\n\n\nfunction SearchBar (props) {\n    return(\n        <ErrorBoundary>\n        <form className=\"searchbar\" onSubmit={props.handleSubmit} validate={props.validateInput}>\n            <InputGroup size=\"lg\" className=\"label\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroup-sizing-lg\">enter city</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl required value={props.value} onChange={props.cityChanged} aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-lg\"/>\n            </InputGroup>\n            <Button type=\"submit\" variant=\"outline-light\" id=\"searchbutton\">search</Button>\n        </form>\n        </ErrorBoundary>\n    )\n}\n\n\nexport default SearchBar;","import React from 'react';\nimport './Scores.css';\n\nfunction Scores (props) {\n\n    const round_to_precision = (x, precision) => {\n        var y = +x + (precision === undefined ? 0.5 : precision/2);\n        return y - (y % (precision === undefined ? 1 : +precision));\n    }\n    const rounded = round_to_precision(props.score, 0.25) * 10\n    const pStyle = {\n        width: `${rounded}%`\n    }\n        return(\n            <li className=\"listItem\">\n                <h3 id=\"name\">{props.name.toLowerCase()}</h3>\n                 <p  id= {props.score >= 7 ? \"green\": props.score < 4 ? \"red\":\"score\"} style={pStyle}>\n                 {rounded}%</p>\n            </li>\n        )\n    }\n\nexport default Scores;\n","import React from 'react';\nimport './CityName.css'\n\n\nfunction CityName(props) {\n    const round_to_precision = (x, precision) => {\n        var y = +x + (precision === undefined ? 0.5 : precision/2);\n        return y - (y % (precision === undefined ? 1 : +precision));\n    }\n        return(\n            <div className={props.score > 0 ? \"nameAndScore\":\"hidden\"}>\n            <h2 id=\"cityName\">{props.cityName}</h2>\n            {props.score > 0 &&\n            <h3 id=\"cityscore\">City Score: {round_to_precision(Math.round(props.score),.25)}%</h3>}\n            </div>\n        )\n    }\n\n\nexport default CityName;","\n\nconst ApiKeys = {mapsKey: 'AIzaSyD8UWoPDZssIjtLLe_ogggrymmRyrg_71E', POIKey: 'bd9dd0415919474e9b93840f09f62139'}\n\nexport default ApiKeys;","const styles = [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"weight\": \"2.00\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#9c9c9c\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": -100\n            },\n            {\n                \"lightness\": 45\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#eeeeee\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7b7b7b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#46bcec\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#c8d7d4\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#070707\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {mapStyles: {\n        height: \"100%\",\n        width: \"100%\",\n        position: 'static !important',\n    \n    }}\n]\n\n\nexport default styles;","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport ApiKey from './ApiKey';\nimport './Map.css'\nimport styles from './MapStyles'\n\n\n\nexport class MapContainer extends Component {\n\n    shouldComponentUpdate() {\n        return this.props.latitude === undefined ? false : true}\n    render() {\n\n        return (\n            <div id=\"mapContainer\">\n                <Map\n                    google={this.props.google}\n                    centerAroundCurrentLocation={true}\n                    zoom={12}\n                    style={styles.mapStyles}\n                    styles={styles}\n                    center={{\n                        lat: this.props.latitude,\n                        lng: this.props.longitude\n                    }}\n                    >\n                </Map>\n            </div>\n        );\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: ApiKey.mapsKey,\n})(MapContainer);","import React from 'react'\nimport './Salaries.css'\n\nfunction formatNumber(num) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\nfunction Salaries(props){\n  return(\n    <li className=\"listItem\">\n      <h2 id=\"name\"><a id=\"jobLink\" target=\"_blank\" rel=\"noopener noreferrer\" href= {`https://www.indeed.com/jobs?q=${props.jobName}&l=${props.jobCity}`}>{props.jobName}</a></h2>\n      <p id=\"salary\">${formatNumber(Math.round(props.jobSalary25))} to ${formatNumber(Math.round(props.jobSalary75))}</p>\n    </li>\n  )\n}\n\nexport default Salaries;","import React from 'react'\nimport './CityImage.css'\n\nexport default function CityImage(props){\n    return(\n        <div className=\"photoContainer\">\n            <img className={props.hidden===null ? \"hidden\":\"photo\"} src={props.image} alt=\"city\"/>\n        </div>\n    )\n}","import React from 'react';\nimport { Tabs, Tab } from 'react-bootstrap'\nimport CityImage from './CityImage';\n\nexport default function TabCategories(props) {\n    return (\n        <Tabs className=\"tabs\" defaultActiveKey=\"scores\" id=\"noanim-tab-example\">\n            <Tab eventKey=\"scores\" title=\"Scores\">\n                <CityImage\n                    image={ props.webPhoto }\n                    hidden={ props.webPhoto }\n                />\n                <ul className=\"mainList\">{ props.scoresList }</ul>\n            </Tab>\n            <Tab eventKey=\"Salaries\" title=\"Salaries\">\n                <ul className=\"salaryList\">\n                    {props.salaryList}\n                    <p>** Salary range based on salaries between the 25th and 75th percentiles in respective profession</p>\n                </ul>\n            </Tab>\n            <Tab eventKey=\"TBD\" title=\"TBD\">\n            </Tab>\n            <Tab eventKey=\"TBD\" title=\"TBD\">\n            </Tab>\n        </Tabs>\n    )\n}\n\n","import React, { useState } from 'react';\nimport SearchBar from './SearchBar'\nimport Scores from './Scores'\nimport CityName from './CityName'\nimport MapContainer from './Map'\nimport Salaries from './Salaries'\nimport TabCategories from './TabCategories'\n\nexport default function Main() {\n  const [city, setCity] = useState('')\n  const [nameScore, setNameScore] = useState([])\n  const [cityScore, setCityScore] = useState('')\n  const [cityName, setCityName] = useState('')\n  const [webPhoto, setWebPhoto] = useState(null)\n  const [latLong, setLatLong] = useState({})\n  const [salaryData, setSalaryData] = useState([])\n  const cityChanged = (event) => {\n    setCity(event.target.value)\n  }\n  function reset() {\n    salaryData.length = 0;\n    nameScore.length = 0;\n  }\n  function validateInput(input){\n    if(input !==  /^[a-zA-Z]+$/){\n        throw new Error('Input must be letters only')\n    }\n    if(!input){\n        throw new Error('Input must not be left blank')\n    }\n  }\n  const handleSubmit = (event) => {\n    validateInput();\n    reset();\n    event.preventDefault();\n    let wrong = \"Something went wrong, please try again later\"\n    fetch(`https://api.teleport.org/api/cities/?search=${city}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n        return response.json();\n      })\n      .then(citySearchData => {\n        if(citySearchData.count === 0){\n          alert(\"Sorry, no data for that city\")\n        }\n        console.log(citySearchData)\n        return fetch(citySearchData._embedded[\"city:search-results\"][0]._links[\"city:item\"].href)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(wrong);\n        }\n        return response.json();\n      })\n      .then(cityData => {\n        return fetch(cityData._links[\"city:urban_area\"].href)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error(wrong);\n            }\n            return response.json();\n          })\n          .then(urbanAreaData => {\n            return fetch(urbanAreaData._links[\"ua:scores\"].href)\n              .then(response => {\n                if (!response.ok) {\n                  throw new Error(wrong);\n                }\n                return response.json()\n              })\n              .then(scoreData => {\n                return fetch(urbanAreaData._links[\"ua:images\"].href)\n                  .then(response => {\n                    if (!response.ok) {\n                      throw new Error(wrong)\n                    }\n                    return response.json()\n                  })\n                  .then(imageLink => {\n                    return fetch(urbanAreaData._links[\"ua:salaries\"].href)\n                      .then(response => {\n                        if (!response.ok) {\n                          throw new Error(wrong)\n                        }\n                        return response.json()\n                      })\n                      .then(salary => {\n                        setLatLong({ lat: cityData.location.latlon.latitude, long: cityData.location.latlon.longitude })\n                        setWebPhoto(imageLink.photos[0].image.web)\n                        setCityScore([...cityScore, scoreData.teleport_city_score])\n                        setNameScore([...nameScore, ...scoreData.categories])\n                        setCityName([cityName, urbanAreaData.full_name])\n                        setSalaryData([...salaryData, ...salary.salaries])\n                      })\n                  })\n              })\n          })\n      })\n      .catch(err => console.log(err.message))\n  }\n  const scoresList = nameScore.map((value, index) => {\n    return <Scores key={index}\n      name={value.name}\n      score={value.score_out_of_10}\n    />\n  })\n  const salaryList = salaryData.map((value, index) => {\n    return <Salaries key={index}\n      jobName={value.job.title}\n      jobSalary25={value.salary_percentiles.percentile_25}\n      jobSalary50={value.salary_percentiles.percentile_50}\n      jobSalary75={value.salary_percentiles.percentile_75}\n      jobCity={city}\n    />\n  })\n  return (\n    <div className=\"App\">\n      <SearchBar\n        cityChanged={cityChanged}\n        handleSubmit={handleSubmit}\n        value={city}/>\n      <MapContainer\n        latitude={latLong.lat}\n        longitude={latLong.long} />\n      <CityName\n        cityName={cityName}\n        score={cityScore} />\n      {cityName && <TabCategories\n        scoresList={scoresList}\n        webPhoto={webPhoto}\n        salaryList={salaryList} />}\n    </div>\n  );\n}","import React from 'react';\nimport './App.css'\nimport Nav from './Nav';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\n\nexport default function App(){\n    return(\n        <div className=\"App\">\n            <Nav />\n            <Header />\n            <Main />\n            <Footer />\n        </div>\n    )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}